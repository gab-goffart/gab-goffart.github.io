{"version":3,"sources":["reducers/game-reducer.js","components/game-board.js","components/modal.js","components/score.js","components/next-piece.js","components/menu.js","components/game-state.js","models/tetromino.js","App.js","serviceWorker.js","index.js"],"names":["GameBoard","_ref","state","dispatch","canvas","useRef","_useState","useState","_useState2","Object","slicedToArray","ctx","setCtx","_useState3","_useState4","animation","setAnimation","useEffect","current","getContext","lineWidth","fillStyle","strokeStyle","fillRect","i","board","length","j","strokeRect","setInterval","moveDown","time","a","window","clearInterval","react_default","createElement","className","ref","height","width","Modal","isDead","score","document","querySelector","closeModal","e","onClick","Score","NextPiece","piece","color","empty","SQ","Menu","activeElement","blur","GameState","gameState","shapes","colors","index","Math","floor","random","nextIndex","initialState","activeIndex","shape","active","nextShape","nextActive","nextColor","position","x","y","isPlaying","GameReducer","action","newState","objectSpread","undraw","checkCollision","canLock","draw","c","flushRows","nb","console","log","pow","resetBoard","full","flushRow","toConsumableArray","App","props","_useReducer","useReducer","_useReducer2","addEventListener","keyDownHandler","removeEventListener","keyCode","game_board","next_piece","components_score","game_state","menu","modal","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2454a5ec.chunk.js","sourcesContent":["import {shapes, colors} from '../models/tetromino'\n\nconst ROWS = 20\nconst COLS = 10\n\nconst index = Math.floor(Math.random() * shapes.length)\nconst nextIndex = Math.floor(Math.random() * shapes.length)\n\nlet board = []\nfor(let i = 0; i < ROWS; i++) {\n\tboard[i] = []\n\tfor(let j = 0; j < COLS; j++) {\n\t\tboard[i][j] = null\n\t}\n}\n\nexport const initialState = {\n\tindex: index,\n\tactiveIndex: 0,\n\tshape: shapes[index],\n\tactive: shapes[index][0],\n\tcolor: colors[index],\n\tnextIndex: nextIndex,\n\tnextShape: shapes[nextIndex],\n\tnextActive: shapes[nextIndex][0],\n\tnextColor: colors[nextIndex],\n\tposition: {\n\t\tx: 3,\n\t\ty: 0,\n\t},\n\tboard: board,\n\tscore: 0,\n\ttime: 1000,\n\tisPlaying: true,\n\tisDead: false\n}\n\nexport const GameReducer = (state, action) => {\n\tlet newState = {...state}\n\t//don't do anything if not playing\n\n\t\t\n\n\tnewState.board = undraw(newState.board, newState.active, newState.position)\n\n\tswitch (action) {\n\t\tcase 'MOVE_LEFT': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tnewState.position.x--\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.x++\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'MOVE_RIGHT': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\treturn newState\n\t\t\t}\n\n\t\t\tnewState.position.x++\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.x--\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase 'MOVE_DOWN': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tnewState.position.y++\n\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.y--\n\t\t\t\tif(!canLock(newState.position)) {\n\t\t\t\t\tnewState.isPlaying = false\n\t\t\t\t\tnewState.isDead = true\n\t\t\t\t\treturn newState\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnewState.board = draw(newState.board, newState.active, newState.position, newState.color)\n\t\t\t\tnewState.position.x = 3\n\t\t\t\tnewState.position.y = 0\n\t\t\t\tnewState.score += 50\n\n\t\t\t\tconst c = flushRows(newState.board)\n\t\t\t\tif(c.nb > 0) {\n\t\t\t\t\tnewState.board = c.board\n\t\t\t\tconsole.log(\"flushed\")\n\n\t\t\t\t\tnewState.time = newState.time - c.nb * 2\n\t\t\t\t\tnewState.score += 400 * Math.pow(2, c.nb)\n\t\t\t\t}\n\n\t\t\t\tnewState.index = newState.nextIndex\n\t\t\t\tnewState.activeIndex = 0\n\t\t\t\tnewState.shape = newState.nextShape\n\t\t\t\tnewState.active = newState.nextActive\n\t\t\t\tnewState.color = newState.nextColor\n\n\t\t\t\tnewState.nextIndex = Math.floor(Math.random() * shapes.length)\n\t\t\t\tnewState.nextShape = shapes[newState.nextIndex]\n\t\t\t\tnewState.nextActive = shapes[newState.nextIndex][0]\n\t\t\t\tnewState.nextColor = colors[newState.nextIndex]\n\t\t\t\t\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase 'DROP': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\treturn newState\n\t\t\t}\n\t\t\twhile(!checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.y++\n\t\t\t\t//try to lock the piece\n\t\t\t}\n\t\t\tnewState.position.y--\n\n   \t\t\tif(!canLock(newState.position)) {\n\t\t\t\tnewState.isPlaying = false\n\t\t\t\tnewState.isDead = true\n\t\t\t\treturn newState\n\t\t\t}\n\t\t\t\n\t\t\tnewState.board = draw(newState.board, newState.active, newState.position, newState.color)\n\t\t\tnewState.position.x = 3\n\t\t\tnewState.position.y = 0\t\t\t\n\t\t\tnewState.score += 50\n\n\t\t\tconst c = flushRows(newState.board)\n\t\t\tif(c.nb > 0) {\n\t\t\t\tnewState.board = c.board\n\t\t\t\tnewState.time = newState.time - c.nb * 2\n\t\t\t\tnewState.score += 400 * Math.pow(2, c.nb)\n\t\t\t}\n\n\t\t\tnewState.index = newState.nextIndex\n\t\t\tnewState.activeIndex = 0\n\t\t\tnewState.shape = newState.nextShape\n\t\t\tnewState.active = newState.nextActive\n\t\t\tnewState.color = newState.nextColor\n\n\t\t\tnewState.nextIndex = Math.floor(Math.random() * shapes.length)\n\t\t\tnewState.nextShape = shapes[newState.nextIndex]\n\t\t\tnewState.nextActive = newState.nextShape[0]\n\t\t\tnewState.nextColor = colors[newState.nextIndex]\n\t\t\tbreak\n\t\t}\n\t\tcase 'ROTATE': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tnewState.activeIndex++\n\t\t\tnewState.active = newState.shape[newState.activeIndex % newState.shape.length]\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.activeIndex--\n\t\t\t\tnewState.active = newState.shape[newState.activeIndex % newState.shape.length]\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'TOGGLE': {\n\t\t\tif(newState.isDead) {\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tnewState.isPlaying = !newState.isPlaying\n\t\t\tbreak\n\t\t}\n\t\tcase 'RESET':  {\n\t\t\tnewState.position.x = 3\n\t\t\tnewState.position.y = 0\n\t\t\tnewState.time = initialState.time\n\t\t\tnewState.board = resetBoard(newState.board)\n\n\t\t\tnewState.index = Math.floor(Math.random() * shapes.length)\n\t\t\tnewState.shape = shapes[newState.index]\n\t\t\tnewState.active = newState.shape[0]\n\t\t\tnewState.color = colors[newState.index]\n\n\t\t\tnewState.nextIndex = Math.floor(Math.random() * shapes.length)\n\t\t\tnewState.nextShape = shapes[newState.nextIndex]\n\t\t\tnewState.nextActive = shapes[newState.nextIndex][0]\n\t\t\tnewState.nextColor = colors[newState.nextIndex]\n\n\t\t\tnewState.score = 0\n\t\t\tnewState.isPlaying = true\n\t\t\tnewState.isDead = false\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tbreak\n\t\t}\n\t}\n\n\n\n\tnewState.board = draw(newState.board, newState.active, newState.position, newState.color)\n\treturn newState\n}\n\n\nconst undraw = (board, piece, position) => {\n\treturn draw(board, piece, position, null)\n}\n\nconst draw = (board, piece, position, color) => {\n\tfor(let i = 0; i < piece.length; i++) {\n\t\tfor(let j = 0; j < piece[i].length; j++) {\n\t\t\tif(!piece[i][j]) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tboard[position.y + i][position.x + j] = color\n\t\t}\n\t}\n\treturn board\n}\n\nconst checkCollision = (board, piece, position) => {\n\tfor(let i = 0; i < piece.length; i++) {\n\t\tfor(let j = 0; j < piece[i].length; j++) {\n\n\t\t\tif(!piece[i][j]) {\n\t  \t\t\tcontinue\n\t\t\t}\n\n\t\t\tif(position.y + i >= ROWS) {\n\t\t  \t\treturn true\n\t\t\t}\n\n\t\t\tif(position.x + j < 0 || position.x + j >= COLS) {\n\t\t  \t\treturn true\n\t\t\t}\n\n\t\t\tif(board[position.y + i][position.x + j]) {\n\t\t  \t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\treturn false\n}\n\nconst canLock = (position) => {\n\treturn position.y !== 0\n}\n\n\nconst flushRows = (board) => {\n\tlet full = true\n\tlet nb = 0\n\tfor(let i = 0; i < board.length; i++) {\n\t\tfor(let j = 0; j < board[i].length; j++) {\n\t\t\tif(board[i][j] === null) {\n\t\t\t\tfull = false\n\t\t\t}\n\t\t} \n\n\t\tif(full) {\n\t\t\tnb++\n\t\t\tboard = flushRow(board, i)\n\t\t}\n\t\tfull = true\n\t}\n\t\n\treturn {nb: nb, board: board}\n\n}\n\nconst flushRow = (board, index) => {\n\tfor(let i = index; i > 0; i--) {\n\t\tboard[i] = [...board[i - 1]]\n\t}\n\n\tfor(let i = 0; i < board[0].length; i++) {\n\t\tboard[0][i] = null\n\t}\n\n\treturn board\n}\n\nconst resetBoard = (board) => {\n\tfor(let i = 0; i < board.length; i++) {\n\t\tfor(let j = 0; j < board[i].length; j++) {\n\t\t\tboard[i][j] = null\n\t\t}\n\t}\n\n\treturn board\n}","import React, {useEffect, useRef, useState} from 'react'\n\nconst SQ = 40\n\nconst GameBoard = ({state, dispatch}) => {\n\tconst canvas = useRef(null)\n\tlet [ctx, setCtx] = useState(null)\n\tlet [animation, setAnimation] = useState(null)\n\n\tuseEffect(() => {\n\t\tctx = canvas.current.getContext(\"2d\")\n\t\tsetCtx(ctx)\n\t\tctx.lineWidth = \"2\"\n\t}, [])\n\n\tuseEffect(() => {\n\t\tctx.fillStyle = \"#000\"\n\t\tctx.strokeStyle = \"#fff\"\n\t\tctx.fillRect(0, 0, 10 * SQ, 20 * SQ)\n\n\t\tfor(let i = 0; i < state.board.length; i++) {\n\t\t\tfor(let j = 0; j < state.board[i].length; j++) {\n\t\t\t\tif(state.board[i][j]) {\n\t\t\t\t\tctx.fillStyle = state.board[i][j]\n\t\t\t\t\tctx.fillRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t\tctx.strokeRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\tuseEffect(() => {\n\n\t\tanimation = setInterval(moveDown, state.time)\n\t\tsetAnimation(animation)\n\n\t\treturn () => {\n\t\t\tsetAnimation(a => {\n\t\t\t\twindow.clearInterval(a)\n\t\t\t\treturn null\n\t\t\t})\n\t\t}\n\n\t}, [state.time])\n\n\n\tconst moveDown = () => {\n\t\tdispatch(\"MOVE_DOWN\")\n\t}\n\n\treturn (\n\t\t<div className=\"board box has-background-info has-text-centered\">\n        \t<canvas ref={canvas} height={20 * SQ} width={10 * SQ}></canvas> \n\t    </div>\n    )\n}\n\nexport default GameBoard","import React, {useEffect} from 'react'\n\nconst Modal = ({isDead, score, dispatch}) => {\n\n\tconst resetHandler = (e) => {\n\t\tdispatch(\"RESET\")\n\t}\n\n\tuseEffect(() => {\n\t\tif(isDead) {\n\t\t\tdocument.querySelector(\".modal\").className += \" is-visible\"\n\t\t} else {\n\t\t\tdocument.querySelector(\".modal\").className = \"modal\";\n\t\t}\n\t}, [isDead])\n\n\tconst closeModal = (e) => {\n\t\tdocument.querySelector(\".modal\").className = \"modal\";\n\t}\n\t\n\treturn (\n\t\t<div className=\"modal\" onClick={closeModal}>\n\t\t\t<div className=\"modal-content\">\n\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t<h3>You died!</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t<p>Looks like you died! :(  You scored {score}. Would you like to play again?</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t<button className=\"button is-success is-rounded\" onClick={resetHandler}>Yes</button>\n\t\t\t\t\t<button className=\"button is-danger is-rounded\" onClick={closeModal}>No</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Modal","import React from 'react'\n\nconst Score = ({score}) => {\n\n\treturn(\n\t\t<div className=\"score box has-background-warning has-text-centered\">\n\t\t\t<h3 className=\"title is-3\">\n\t\t\t\tYour score : <br/>\n\t\t\t\t{score}\n\t\t\t</h3>\n\t\t</div>\n\t)\n}\n\nexport default Score","import React, {useRef, useEffect} from 'react'\n\nconst SQ = 50\n\nconst NextPiece = ({piece, color}) => {\n\tlet ctx = null\n\tlet empty = []\n\tlet canvas = useRef(null)\n\n\tfor(let i = 0; i < 4; i++) {\n\t\tempty[i] = []\n\t\tfor(let j = 0; j < 4; j++){\n\t\t\tempty[i][j] = null\n\t\t}\n\t}\n\n\n\tuseEffect(() => {\n\t\tctx = canvas.current.getContext(\"2d\")\n\t\tctx.lineWidth = \"2\"\n\t\tctx.strokeStyle = \"#fff\"\n\t\tctx.fillStyle = \"#000\"\n\t\tctx.fillRect(0, 0, canvas.current.width, canvas.current.height)\n\t\tfor(let i = 0; i < piece.length; i++) {\n\t\t\tfor(let j = 0; j < piece[i].length; j++) {\n\t\t\t\tif(piece[i][j]) {\n\t\t\t\t\tctx.fillStyle = color\n\t\t\t\t\tctx.fillRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t\tctx.strokeRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [piece])\n\n\treturn (\n\t\t<div className=\"next box has-background-warning has-text-centered\">\n\t\t\t<h3 className=\"title is-3\">Your next piece :</h3>\n\t\t\t<canvas ref={canvas} height={SQ * 4} width={SQ * 4}></canvas>\n\t\t</div>\n\t)\n}\n\nexport default NextPiece","import React from 'react'\n\nconst Menu = ({dispatch}) => {\n\n\treturn (\n\t\t<div className=\"menu box has-background-warning has-text-centered\">\n\t\t\t<h3 className=\"title is-3\">Menu</h3>\n\t\t\t<div className=\"buttons\">\n\t\t\t\t<button className=\"button is-fullwidth is-rounded\" onClick={(e) => {dispatch(\"RESET\"); ; document.activeElement.blur()}}>Reset</button>\n\t\t\t\t<button className=\"button is-fullwidth is-rounded\" onClick={(e) => {dispatch(\"TOGGLE\"); document.activeElement.blur()}}>Play / Pause</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Menu\n","import React from 'react'\n\nconst GameState = ({gameState}) => {\n\treturn (\n\t\t<div className=\"state box has-background-warning has-text-centered\">\n\t\t\t<h3 className=\"title is-3\">Currently {gameState}</h3>\n\t\t</div>\n\t)\n\n}\n\nexport default GameState","export const shapes = [\n\t[\n\t\t[\n\t\t\t[0, 1, 1],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 0, 0]\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 0, 1]\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[1, 1, 0]\n\t\t],\n\t\t[\t[1, 0, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0]\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[1, 0, 0],\n\t\t],\n\t],\n\t\n\t[\n\t\t[\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[1, 1, 1, 1],\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t\t[1, 1, 1, 1],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[1, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t], \n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 1],\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[1, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t]\n\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t]\n]\n\nexport const colors = [\n\t\"#fc9105\", // S\n\t\"#0fbc1d\", // Z\n\t\"#16fcf0\", // I\n\t\"#1622fc\", // J\n\t\"#fc1631\", // L\n\t\"#f702ca\", // O\n\t\"#f2f204\", // T\n]\n","import React, {useReducer, useEffect} from 'react'\nimport GameBoard from './components/game-board'\nimport Modal from './components/modal'\nimport Score from './components/score'\nimport NextPiece from './components/next-piece'\nimport Menu from './components/menu'\nimport GameState from './components/game-state'\nimport './app.css'\nimport {initialState, GameReducer} from './reducers/game-reducer'\n\nconst App = (props) => {\n    const [state, dispatch] = useReducer(GameReducer, initialState)\n\t\n\tuseEffect(() => {\n\t\t\n\t\tdocument.addEventListener('keydown', keyDownHandler)\n\t\t\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', keyDownHandler)\n\t\t}\n\t}, [])\n\n\tconst keyDownHandler = (e) => {\n\t\tswitch(e.keyCode) {\n\t\t\tcase 32: {\n\t\t\t\tdispatch(\"DROP\")\n\t\t\t\t\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 37: {\n\t\t\t\tdispatch(\"MOVE_LEFT\")\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 38: {\n\t\t\t\tdispatch(\"ROTATE\")\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 39: {\n\t\t\t\tdispatch(\"MOVE_RIGHT\")\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 40: {\n\t\t\t\tdispatch(\"MOVE_DOWN\")\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n    return (\n        <div className=\"Container\">\n\t        <div className=\"grid\">\n\t\t        <h1 className=\"has-text-centered main-header\">Tetris game</h1>\n        \t\t<GameBoard state={state} dispatch={dispatch}></GameBoard>\n\t\t\t\t<NextPiece piece={state.nextActive} color={state.nextColor}></NextPiece>\n\t\t\t\t<Score score={state.score}></Score>\n\t\t\t\t<GameState gameState={state.isDead ? \"Dead\" : state.isPlaying ? \"Playing\" : \"Paused\"}></GameState>\n\t\t\t\t<Menu dispatch={dispatch}></Menu>\n\t        </div>\n            <Modal isPlaying={state.isPlaying} isDead={state.isDead} score={state.score} dispatch={dispatch}></Modal>\n        </div>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import 'bulma'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}