{"version":3,"sources":["App.js","components/square.js","components/row.js","components/tetris-board.js","components/next.js","components/controls.js","components/score.js","components/side-menu.js","models/tetromino.js","serviceWorker.js","index.js"],"names":["SQ","Square","_ref","color","squareStyle","minHeight","minWidth","maxHeight","maxWidth","margin","padding","backgroundColor","react_default","a","createElement","className","style","Row","props","row","map","el","index","square","key","Board","board","components_row","rowIndex","Next","piece","vacant","empty","i","j","length","Controls","resetHandler","toggleHandler","isPlaying","onClick","Score","score","SideMenu","next","components_next","components_score","controls","shapes","colors","emptyBoard","Math","floor","random","indexNext","initialState","active","colorNext","position","x","COLUMN","y","App","_useState","useState","_useState2","Object","slicedToArray","state","setState","resetBoard","newBoard","checkCollision","keyDownHandler","event","keyCode","moveLeft","rotate","moveRight","moveDown","useEffect","document","addEventListener","interval","setInterval","clearInterval","removeEventListener","newState","objectSpread","undraw","draw","canLock","fullRows","checkFullRow","pow","flushRows","isFull","nbFlush","flushRow","tetris_board","side_menu","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82c063bb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Board from './components/tetris-board'\n//import Next from './components/next'\nimport SideMenu from './components/side-menu'\nimport {shapes, colors} from './models/tetromino'\n\nconst ROW = 20\nconst COLUMN = 10\nconst VACANT = \"white\"\n\nlet emptyBoard = []\nfor (let i = 0; i < ROW; i++) {\n  emptyBoard[i] = []\n  for (let j = 0; j < COLUMN; j++) {\n    emptyBoard[i][j] = VACANT\n  }\n}\n\nconst index = Math.floor(Math.random() * shapes.length)\nconst indexNext = Math.floor(Math.random() * shapes.length)\n\nconst initialState = {\n  board: emptyBoard,\n  active: 0,\n  index: index,\n  piece: shapes[index][0],\n  color: colors[index],\n  indexNext: indexNext,\n  next: shapes[indexNext][0],\n  colorNext: colors[indexNext],\n  position: {x: Math.floor(COLUMN / 2), y: 0},\n  isPlaying: true,\n  score: 0\n}\n\nconst App = (props) => {\n\n  const [state, setState] = useState(initialState)\n\n  const canLock = (newBoard, piece, position) => {\n    for (let i = 0; i < piece.length; i++) {\n      for(let j = 0; j < piece[i].length; j++) {\n\n        if(position.y  + i === 0) {\n          return false\n        }\n        \n        if(piece[i][j]) {\n          if(newBoard[position.y + i][position.x + j] !== VACANT) {\n            return false\n          }\n        }\n      }\n    }\n    return true\n  }\n\n  const resetBoard = () => {\n    let newBoard = []\n\n    for(let i = 0; i < ROW; i++) {\n      newBoard[i] = []\n      for(let j = 0; j < COLUMN; j++) {\n        newBoard[i][j] = VACANT\n      }\n    }\n\n    return newBoard\n  }\n\n  const checkCollision = (board, piece, position) => {\n    for(let i = 0; i < piece.length; i++) {\n      for(let j = 0; j < piece[i].length; j++) {\n\n        if(!piece[i][j]) {\n          continue\n        }\n        if(position.y + i < 0) {\n          continue\n        }\n\n        if(position.y + i >= ROW) {\n          return true\n        }\n        \n        if(position.x + j < 0 || position.x + j > COLUMN) {\n          return true\n        }\n\n\n        if(board[position.y + i][position.x + j] !== VACANT) {\n          return true\n        }\n      }\n    }\n    return false\n  }\n  \n  const keyDownHandler = (event) => {\n    switch(event.keyCode) {\n      case 37: {\n        moveLeft()\n        break\n      }\n      case 38: {\n        rotate()\n        break\n      }\n      case 39: {\n        moveRight()\n        break\n      }\n      case 40: {\n        moveDown()\n        break\n      }\n      default: {\n        break\n      }\n    }\n  }\n\n  //move piece down evert 500 seconds (while state.isPlaying)\n  useEffect(() => {\n    document.addEventListener(\"keydown\", keyDownHandler)\n    const interval = setInterval(moveDown, 700)\n\n    return () => {\n      clearInterval(interval)      \n      document.removeEventListener(\"keydown\", keyDownHandler)\n    }\n  }, [state.isPlaying])\n\n  const moveDown = () => {\n    if(!state.isPlaying) {\n      return\n    }\n\n    setState(state => {\n      let newState = {...state}\n      newState.board = undraw(state.board, state.piece, state.position)\n      newState.position.y++\n\n      if(!checkCollision(newState.board, newState.piece, newState.position)) {\n        newState.board = draw(newState.board, newState.piece, newState.position, newState.color)\n        return newState\n      }\n\n      newState.position.y--\n              \n      if(!canLock(newState.board, newState.piece, newState.position)) {\n        newState.board = resetBoard()\n        newState.score = 0\n        newState.isPlaying = false\n      } else {\n        newState.board = draw(newState.board, newState.piece, newState.position, newState.color)\n        newState.score += 50\n      }\n      \n      const fullRows = checkFullRow(newState.board)\n      if(fullRows > 0) {\n        newState.score += (400 * Math.pow(2, fullRows))\n      }\n      newState.board = flushRows(newState.board)\n\n      newState.position.x = Math.floor(COLUMN / 2) - 1\n      newState.position.y = 0\n      \n      newState.active = 0\n      newState.index = newState.indexNext\n      newState.piece = newState.next\n      newState.color = newState.colorNext\n\n      newState.indexNext = Math.floor(Math.random() * shapes.length)\n      newState.next = shapes[newState.indexNext][newState.active]\n      newState.colorNext = colors[newState.indexNext]\n      \n      newState.board = draw(newState.board, newState.piece, newState.position, newState.color)\n      return newState\n    })\n  }\n\n  const moveLeft = () => {\n    if(!state.isPlaying) {\n      return\n    }\n\n    setState(state => {\n      let newState = {...state}\n      newState.board = undraw(state.board, state.piece, state.position)\n      newState.position.x--\n      if(checkCollision(newState.board, newState.piece, newState.position)) {\n        newState.position.x++\n      }\n      newState.board = draw(newState.board, newState.piece, newState.position, newState.color)\n      return newState\n    })\n  }\n\n  const moveRight = () => {\n    if(!state.isPlaying) {\n      return\n    }\n    setState(state => {\n      let newState = {...state}\n      newState.board = undraw(state.board, state.piece, state.position)\n      newState.position.x++\n      if(checkCollision(newState.board, newState.piece, newState.position)) {\n        newState.position.x--\n      }\n      newState.board = draw(newState.board, newState.piece, newState.position, newState.color)\n      return newState\n    })\n  }\n\n  const rotate = () => {\n    if(!state.isPlaying) {\n      return\n    }\n    \n    setState(state => {\n      let newState = {...state}\n      newState.board = undraw(state.board, state.piece, state.position)\n      newState.active++\n      newState.piece = shapes[state.index][newState.active % shapes[index].length]\n      if(checkCollision(newState.board, newState.piece, newState.position)){\n        newState.active--\n      }\n\n      newState.piece = shapes[state.index][newState.active % shapes[index].length]\n      \n      newState.board = draw(newState.board, newState.piece, newState.position, newState.color)\n      return newState\n    })\n  }\n\n  const checkFullRow = (board) => {\n\n    let isFull = true\n    let nbFlush = 0\n\n    for(let i = 0; i < ROW; i++) {\n      for(let j = 0; j< COLUMN; j++) {\n        if(board[i][j] === VACANT) {\n          isFull = false\n        }\n      }\n\n      if(isFull) {\n        nbFlush++\n      }\n\n      isFull = true\n    }\n    return nbFlush\n  }\n\n  const flushRows = (board) => {\n    let isFull = true\n\n    for(let i = 0; i < ROW; i++) {\n      for(let j = 0; j< COLUMN; j++) {\n        if(board[i][j] === VACANT) {\n          isFull = false\n        }\n      }\n\n      if(isFull) {\n        board = flushRow(board, i)\n      }\n\n      isFull = true\n    }\n    return board\n  }\n\n  const flushRow = (board, rowIndex) => {\n    for(let i = rowIndex; i >= 0; i--) {\n      for(let j = 0; j < COLUMN; j++) {\n        board[i][j] = VACANT\n        if(i !== 0) {\n          board[i][j] = board[i - 1][j]\n        }\n      }\n    }\n    return board\n  }\n  \n  const undraw = (board, piece, position) => {\n    return draw(board, piece, position, VACANT)\n  }\n  \n  const draw = (board, piece, position, color) => {\n    for (let i = 0; i < piece.length; i++) {\n      for (let j = 0; j < piece[i].length; j++) {\n        if (piece[i][j]) {\n          board[position.y + i][position.x + j] = color\n        }\n      }\n    }\n\n    return board\n\n  }\n\n  const resetHandler = () => {\n    setState(state => {\n      let newState = {...state}\n      \n      newState.board = resetBoard()\n      newState.score = 0\n      newState.active = 0\n      newState.index = Math.floor(Math.random() * shapes.length)\n      newState.piece = shapes[newState.index][newState.active]\n      newState.color = colors[newState.index]\n      newState.indexNext = Math.floor(Math.random() * shapes.length)\n      newState.next = shapes[newState.indexNext][newState.active]\n      newState.colorNext = colors[newState.indexNext]\n      newState.position = {x: 3, y: 0}\n\n      return newState\n    })\n  }\n\n  const toggleHandler = () => {\n    setState(state => {\n      let newState = {...state}\n\n      newState.isPlaying = !newState.isPlaying\n\n      return newState\n    })\n  }\n\n  return (\n    <section className=\"section hero is-fullheight has-background-black\">\n      <div className=\"columns is-centered\">\n        <div className=\"column is-8\">\n          <h1 className=\"title is-1 has-text-white\">Tetris!</h1>\n          <div className=\"columns is-centered\">\n            <div className=\"column is-6\">\n              <Board board={state.board}></Board>\n            </div>\n            <div className=\"column is-4\"> \n              <SideMenu \n                next={{piece: state.next, color: state.colorNext, vacant: VACANT}}\n                score={state.score}\n                resetHandler={resetHandler}\n                toggleHandler={toggleHandler}\n                isPlaying={state.isPlaying}>\n              </SideMenu>\n            </div>\n          </div>\n        </div>      \n      </div>\n    </section>\n  );\n}\n\nexport default App;\n","import React from 'react'\n\nconst SQ = \"2rem\";\n\nconst Square = ({color}) => {\n\t\n\tconst squareStyle = {\n\t\tminHeight: SQ,\n\t\tminWidth: SQ,\n\t\tmaxHeight: SQ,\n\t\tmaxWidth: SQ,\n\t\tmargin: 1,\n\t\tpadding: 0,\n\t\tbackgroundColor: color,\n\t}\n\n\treturn (\n\t\t<div className=\"notification\" style={squareStyle} ></div>\n\t)\t\n}\n\n\nexport default Square","import React from 'react'\nimport Square from './square'\n\nconst Row = (props) => {\n\tconst {row} = props\n\t\n\tconst rowStyle = {\n\t\tmargin: 0,\n\t}\n\n\treturn (\n\t<div className=\"columns is-centered\" style={rowStyle}>\n\t\t{row.map( (el, index) => {\n\t\t\treturn <Square key={index} color={el}></Square>\n\t\t})}\n\t</div>\n\t)\n}\n\nexport default Row","import React from 'react'\nimport Row from './row'\n\nconst Board = (props) => {\n\n\tconst {board} = props;\n\t\n\n\treturn (\n      <div className=\"box has-background-grey-darker\">\n\t\t{board.map((row, index) => {\n\t\t\treturn <Row key={index} row={row} rowIndex={index} />\n\t\t})}\n      </div>\n\t)\n\t\n}\n\nexport default Board;","import React from 'react'\nimport Row from './row'\n\nconst COL = 4\nconst ROW = 4\n\n\n\nconst Next = ({piece, color, vacant}) => {\n\t\n\tlet empty = []\n\n\tfor(let i = 0; i < ROW; i++) {\n\t\tempty[i] = []\n\t\tfor(let j = 0; j < COL; j++) {\n\t\t\tempty[i][j] = vacant\n\t\t}\n\t}\n\t\n\tfor(let i = 0; i < piece.length; i++) {\n\t\tfor(let j = 0; j < piece[i].length; j++) {\n\t\t\tempty[i][j] = piece[i][j] ? color : vacant\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className=\"tile is-child box has-background-primary\">\n\t\t\t<h3 className=\"title is-3\">Next piece : </h3>\n\t\t\t{empty.map((row, index) => {\n\t\t\t\treturn (<Row key={index} row={row} ></Row>)\n\t\t\t})}\n\t\t</div>\n\t)\n}\n\nexport default Next","import React from 'react'\n\nconst Controls = (props) => {\n\t\t\n\tconst {resetHandler, toggleHandler, isPlaying} = props\n\n\treturn (\n\t\t<div className=\"tile is-child is-vertical box has-background-primary\">\n\t\t\t<h3 className=\"title is-3\">Menu</h3>\n\t\t\t<div className=\"buttons\">\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"button is-fullwidth is-rounded is-outlined\"\n\t\t\t\t\tonClick={resetHandler}>\n\t\t\t\t\tRestart\n\t\t\t\t</button>\n\t\t\t\t<button \n\t\t\t\t\tclassName=\"button is-fullwidth is-rounded is-outlined\"\n\t\t\t\t\tonClick={toggleHandler}>\n\t\t\t\t\t{isPlaying ? \"Pause\" : \"Start\"}\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Controls","import React from 'react'\n\nconst Score = (props) => {\n\tconst {score} = props\n\n\treturn (\n\t\t<div className=\"tile is-child box has-background-primary\">\n\t\t\t<h3 className=\"title is-3\">Votre score : <br/> {score}</h3>\n\t\t</div>\n\t)\n\n}\n\nexport default Score","import React from 'react'\nimport Next from './next'\nimport Controls from './controls'\nimport Score from './score'\n\nconst SideMenu = (props) => {\n\t\n\tconst {next, score, resetHandler, toggleHandler, isPlaying} = props\n\n\treturn (\n\t\t<div className=\"box has-background-warning\">\n\t\t\t<div className=\"tile is-ancestor is-vertical\">\n\t\t\t\t<div className=\"tile is-parent is-vertical\">\n\t\t\t\t\t<Next \n\t\t\t\t\t\tpiece={next.piece} \n\t\t\t\t\t\tcolor={next.color} \n\t\t\t\t\t\tvacant={next.vacant}>\n\t\t\t\t\t</Next>\n\t\t\t\t\t<Score \n\t\t\t\t\t\tscore={score}>\n\t\t\t\t\t</Score>\n\t\t\t\t\t<Controls \n\t\t\t\t\t\tresetHandler={resetHandler} \n\t\t\t\t\t\ttoggleHandler={toggleHandler}\n\t\t\t\t\t\tisPlaying={isPlaying}>\n\t\t\t\t\t</Controls>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n\n}\n\nexport default SideMenu","export const shapes = [\n\t[\n\t\t[\n\t\t\t[0, 1, 1],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 0, 0]\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 0, 1]\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[1, 1, 0]\n\t\t],\n\t\t[\t[1, 0, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0]\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[1, 0, 0],\n\t\t],\n\t],\n\t\n\t[\n\t\t[\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[1, 1, 1, 1],\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t\t[1, 1, 1, 1],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[1, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t], \n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 1],\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[1, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t]\n\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t]\n]\n\nexport const colors = [\n\t\"#fc9105\", // S\n\t\"#0fbc1d\", // Z\n\t\"#16fcf0\", // I\n\t\"#1622fc\", // J\n\t\"#fc1631\", // L\n\t\"#f702ca\", // O\n\t\"#f2f204\", // T\n]\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma'\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}