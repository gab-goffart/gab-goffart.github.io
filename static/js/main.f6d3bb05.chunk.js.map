{"version":3,"sources":["reducers/game-reducer.js","components/game-board.js","components/modal.js","components/score.js","components/next-piece.js","components/menu.js","components/game-state.js","models/tetromino.js","App.js","serviceWorker.js","index.js"],"names":["GameBoard","_ref","state","dispatch","canvas","useRef","_useState","useState","_useState2","Object","slicedToArray","ctx","setCtx","_useState3","_useState4","animation","setAnimation","useEffect","current","getContext","lineWidth","fillStyle","strokeStyle","fillRect","i","board","length","j","strokeRect","setInterval","moveDown","time","a","window","clearInterval","react_default","createElement","className","ref","height","width","Modal","isDead","score","document","querySelector","onClick","e","Score","NextPiece","piece","color","empty","SQ","Menu","GameState","isPlaying","shapes","colors","index","Math","floor","random","nextIndex","initialState","activeIndex","shape","active","nextShape","nextActive","nextColor","position","x","y","GameReducer","action","newState","objectSpread","undraw","checkCollision","canLock","draw","c","flushRows","nb","console","log","pow","resetBoard","full","flushRow","toConsumableArray","App","props","_useReducer","useReducer","_useReducer2","addEventListener","keyDownHandler","removeEventListener","keyCode","game_board","next_piece","components_score","game_state","menu","modal","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f6d3bb05.chunk.js","sourcesContent":["import {shapes, colors} from '../models/tetromino'\n\nconst ROWS = 20\nconst COLS = 10\n\nconst index = Math.floor(Math.random() * shapes.length)\nconst nextIndex = Math.floor(Math.random() * shapes.length)\n\nlet board = []\nfor(let i = 0; i < ROWS; i++) {\n\tboard[i] = []\n\tfor(let j = 0; j < COLS; j++) {\n\t\tboard[i][j] = null\n\t}\n}\n\nexport const initialState = {\n\tindex: index,\n\tactiveIndex: 0,\n\tshape: shapes[index],\n\tactive: shapes[index][0],\n\tcolor: colors[index],\n\tnextIndex: nextIndex,\n\tnextShape: shapes[nextIndex],\n\tnextActive: shapes[nextIndex][0],\n\tnextColor: colors[nextIndex],\n\tposition: {\n\t\tx: 3,\n\t\ty: 0,\n\t},\n\tboard: board,\n\tscore: 0,\n\ttime: 1000,\n\tisPlaying: true,\n\tisDead: false\n}\n\nexport const GameReducer = (state, action) => {\n\tlet newState = {...state}\n\t//don't do anything if not playing\n\n\t\t\n\n\tnewState.board = undraw(newState.board, newState.active, newState.position)\n\n\tswitch (action) {\n\t\tcase 'MOVE_LEFT': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tnewState.position.x--\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.x++\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'MOVE_RIGHT': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\treturn newState\n\t\t\t}\n\n\t\t\tnewState.position.x++\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.x--\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase 'MOVE_DOWN': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tnewState.position.y++\n\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.y--\n\t\t\t\tif(!canLock(newState.position)) {\n\t\t\t\t\tnewState.isPlaying = false\n\t\t\t\t\tnewState.isDead = true\n\t\t\t\t\treturn newState\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnewState.board = draw(newState.board, newState.active, newState.position, newState.color)\n\t\t\t\tnewState.position.x = 3\n\t\t\t\tnewState.position.y = 0\n\t\t\t\tnewState.score += 50\n\n\t\t\t\tconst c = flushRows(newState.board)\n\t\t\t\tif(c.nb > 0) {\n\t\t\t\t\tnewState.board = c.board\n\t\t\t\tconsole.log(\"flushed\")\n\n\t\t\t\t\tnewState.time = newState.time - c.nb * 2\n\t\t\t\t\tnewState.score += 400 * Math.pow(2, c.nb)\n\t\t\t\t}\n\n\t\t\t\tnewState.index = newState.nextIndex\n\t\t\t\tnewState.activeIndex = 0\n\t\t\t\tnewState.shape = newState.nextShape\n\t\t\t\tnewState.active = newState.nextActive\n\t\t\t\tnewState.color = newState.nextColor\n\n\t\t\t\tnewState.nextIndex = Math.floor(Math.random() * shapes.length)\n\t\t\t\tnewState.nextShape = shapes[newState.nextIndex]\n\t\t\t\tnewState.nextActive = shapes[newState.nextIndex][0]\n\t\t\t\tnewState.nextColor = colors[newState.nextIndex]\n\t\t\t\t\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase 'DROP': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\treturn newState\n\t\t\t}\n\t\t\twhile(!checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.y++\n\t\t\t\t//try to lock the piece\n\t\t\t}\n\t\t\tnewState.position.y--\n\n   \t\t\tif(!canLock(newState.position)) {\n\t\t\t\tnewState.isPlaying = false\n\t\t\t\tnewState.isDead = true\n\t\t\t\treturn newState\n\t\t\t}\n\t\t\t\n\t\t\tnewState.board = draw(newState.board, newState.active, newState.position, newState.color)\n\t\t\tnewState.position.x = 3\n\t\t\tnewState.position.y = 0\t\t\t\n\t\t\tnewState.score += 50\n\n\t\t\tconst c = flushRows(newState.board)\n\t\t\tif(c.nb > 0) {\n\t\t\t\tnewState.board = c.board\n\t\t\t\tnewState.time = newState.time - c.nb * 2\n\t\t\t\tnewState.score += 400 * Math.pow(2, c.nb)\n\t\t\t}\n\n\t\t\tnewState.index = newState.nextIndex\n\t\t\tnewState.activeIndex = 0\n\t\t\tnewState.shape = newState.nextShape\n\t\t\tnewState.active = newState.nextActive\n\t\t\tnewState.color = newState.nextColor\n\n\t\t\tnewState.nextIndex = Math.floor(Math.random() * shapes.length)\n\t\t\tnewState.nextShape = shapes[newState.nextIndex]\n\t\t\tnewState.nextActive = newState.nextShape[0]\n\t\t\tnewState.nextColor = colors[newState.nextIndex]\n\t\t\tbreak\n\t\t}\n\t\tcase 'ROTATE': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tnewState.activeIndex++\n\t\t\tnewState.active = newState.shape[newState.activeIndex % newState.shape.length]\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.activeIndex--\n\t\t\t\tnewState.active = newState.shape[newState.activeIndex % newState.shape.length]\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'TOGGLE': {\n\t\t\tnewState.isPlaying = !newState.isPlaying\n\t\t\tbreak\n\t\t}\n\t\tcase 'RESET':  {\n\t\t\tnewState.position.x = 3\n\t\t\tnewState.position.y = 0\n\t\t\tnewState.time = initialState.time\n\t\t\tnewState.board = resetBoard(newState.board)\n\n\t\t\tnewState.index = Math.floor(Math.random() * shapes.length)\n\t\t\tnewState.shape = shapes[newState.index]\n\t\t\tnewState.active = newState.shape[0]\n\t\t\tnewState.color = colors[newState.index]\n\n\t\t\tnewState.nextIndex = Math.floor(Math.random() * shapes.length)\n\t\t\tnewState.nextShape = shapes[newState.nextIndex]\n\t\t\tnewState.nextActive = shapes[newState.nextIndex][0]\n\t\t\tnewState.nextColor = colors[newState.nextIndex]\n\n\t\t\tnewState.score = 0\n\t\t\tnewState.isPlaying = true\n\t\t\tnewState.isDead = false\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tbreak\n\t\t}\n\t}\n\n\n\n\tnewState.board = draw(newState.board, newState.active, newState.position, newState.color)\n\treturn newState\n}\n\n\nconst undraw = (board, piece, position) => {\n\treturn draw(board, piece, position, null)\n}\n\nconst draw = (board, piece, position, color) => {\n\tfor(let i = 0; i < piece.length; i++) {\n\t\tfor(let j = 0; j < piece[i].length; j++) {\n\t\t\tif(!piece[i][j]) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tboard[position.y + i][position.x + j] = color\n\t\t}\n\t}\n\treturn board\n}\n\nconst checkCollision = (board, piece, position) => {\n\tfor(let i = 0; i < piece.length; i++) {\n\t\tfor(let j = 0; j < piece[i].length; j++) {\n\n\t\t\tif(!piece[i][j]) {\n\t  \t\t\tcontinue\n\t\t\t}\n\n\t\t\tif(position.y + i >= ROWS) {\n\t\t  \t\treturn true\n\t\t\t}\n\n\t\t\tif(position.x + j < 0 || position.x + j >= COLS) {\n\t\t  \t\treturn true\n\t\t\t}\n\n\t\t\tif(board[position.y + i][position.x + j]) {\n\t\t  \t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\treturn false\n}\n\nconst canLock = (position) => {\n\treturn position.y !== 0\n}\n\n\nconst flushRows = (board) => {\n\tlet full = true\n\tlet nb = 0\n\tfor(let i = 0; i < board.length; i++) {\n\t\tfor(let j = 0; j < board[i].length; j++) {\n\t\t\tif(board[i][j] === null) {\n\t\t\t\tfull = false\n\t\t\t}\n\t\t} \n\n\t\tif(full) {\n\t\t\tnb++\n\t\t\tboard = flushRow(board, i)\n\t\t}\n\t\tfull = true\n\t}\n\t\n\treturn {nb: nb, board: board}\n\n}\n\nconst flushRow = (board, index) => {\n\tfor(let i = index; i > 0; i--) {\n\t\tboard[i] = [...board[i - 1]]\n\t}\n\n\tfor(let i = 0; i < board[0].length; i++) {\n\t\tboard[0][i] = null\n\t}\n\n\treturn board\n}\n\nconst resetBoard = (board) => {\n\tfor(let i = 0; i < board.length; i++) {\n\t\tfor(let j = 0; j < board[i].length; j++) {\n\t\t\tboard[i][j] = null\n\t\t}\n\t}\n\n\treturn board\n}","import React, {useEffect, useRef, useState} from 'react'\n\nconst SQ = 40\n\nconst GameBoard = ({state, dispatch}) => {\n\tconst canvas = useRef(null)\n\tlet [ctx, setCtx] = useState(null)\n\tlet [animation, setAnimation] = useState(null)\n\n\tuseEffect(() => {\n\t\tctx = canvas.current.getContext(\"2d\")\n\t\tsetCtx(ctx)\n\t\tctx.lineWidth = \"2\"\n\t}, [])\n\n\tuseEffect(() => {\n\t\tctx.fillStyle = \"#000\"\n\t\tctx.strokeStyle = \"#fff\"\n\t\tctx.fillRect(0, 0, 10 * SQ, 20 * SQ)\n\n\t\tfor(let i = 0; i < state.board.length; i++) {\n\t\t\tfor(let j = 0; j < state.board[i].length; j++) {\n\t\t\t\tif(state.board[i][j]) {\n\t\t\t\t\tctx.fillStyle = state.board[i][j]\n\t\t\t\t\tctx.fillRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t\tctx.strokeRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n\tuseEffect(() => {\n\n\t\tanimation = setInterval(moveDown, state.time)\n\t\tsetAnimation(animation)\n\n\t\treturn () => {\n\t\t\tsetAnimation(a => {\n\t\t\t\twindow.clearInterval(a)\n\t\t\t\treturn null\n\t\t\t})\n\t\t}\n\n\t}, [state.time])\n\n\n\tconst moveDown = () => {\n\t\tdispatch(\"MOVE_DOWN\")\n\t}\n\n\treturn (\n\t\t<div className=\"board box has-background-info has-text-centered\">\n        \t<canvas ref={canvas} height={20 * SQ} width={10 * SQ}></canvas> \n\t    </div>\n    )\n}\n\nexport default GameBoard","import React, {useEffect} from 'react'\n\nconst Modal = ({isDead, score, dispatch}) => {\n\n\tconst resetHandler = (e) => {\n\t\tdispatch(\"RESET\")\n\t}\n\n\tuseEffect(() => {\n\t\tif(isDead) {\n\t\t\tdocument.querySelector(\".modal\").className += \" is-visible\"\n\t\t} else {\n\t\t\tdocument.querySelector(\".modal\").className = \"modal\";\n\t\t}\n\t}, [isDead])\n\n\tconst closeModal = (e) => {\n\t\tdocument.querySelector(\".modal\").className = \"modal\";\n\t}\n\t\n\treturn (\n\t\t<div className=\"modal\">\n\t\t\t<div className=\"modal-content\">\n\t\t\t\t<div className=\"modal-header\">\n\t\t\t\t\t<h3>You died!</h3>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"modal-body\">\n\t\t\t\t\t<p>Looks like you died! :(  You scored {score}. Would you like to play again?</p>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"modal-footer\">\n\t\t\t\t\t<button className=\"button is-success\" onClick={resetHandler}>Yes</button>\n\t\t\t\t\t<button className=\"button is-error\" onClick={closeModal}>No</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Modal","import React from 'react'\n\nconst Score = ({score}) => {\n\n\treturn(\n\t\t<div className=\"score box has-background-warning has-text-centered\">\n\t\t\t<h3 className=\"title is-3\">\n\t\t\t\tYour score : <br/>\n\t\t\t\t{score}\n\t\t\t</h3>\n\t\t</div>\n\t)\n}\n\nexport default Score","import React, {useRef, useEffect} from 'react'\n\nconst SQ = 50\n\nconst NextPiece = ({piece, color}) => {\n\tlet ctx = null\n\tlet empty = []\n\tlet canvas = useRef(null)\n\n\tfor(let i = 0; i < 4; i++) {\n\t\tempty[i] = []\n\t\tfor(let j = 0; j < 4; j++){\n\t\t\tempty[i][j] = null\n\t\t}\n\t}\n\n\n\tuseEffect(() => {\n\t\tctx = canvas.current.getContext(\"2d\")\n\t\tctx.lineWidth = \"2\"\n\t\tctx.strokeStyle = \"#fff\"\n\t\tctx.fillStyle = \"#000\"\n\t\tctx.fillRect(0, 0, canvas.current.width, canvas.current.height)\n\t\tfor(let i = 0; i < piece.length; i++) {\n\t\t\tfor(let j = 0; j < piece[i].length; j++) {\n\t\t\t\tif(piece[i][j]) {\n\t\t\t\t\tctx.fillStyle = color\n\t\t\t\t\tctx.fillRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t\tctx.strokeRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [piece])\n\n\treturn (\n\t\t<div className=\"next box has-background-warning has-text-centered\">\n\t\t\t<h3 className=\"title is-3\">Your next piece :</h3>\n\t\t\t<canvas ref={canvas} height={SQ * 4} width={SQ * 4}></canvas>\n\t\t</div>\n\t)\n}\n\nexport default NextPiece","import React from 'react'\n\nconst Menu = ({dispatch}) => {\n\n\treturn (\n\t\t<div className=\"menu box has-background-warning has-text-centered\">\n\t\t\t<h3 className=\"title is-3\">Menu</h3>\n\t\t\t<div className=\"buttons\">\n\t\t\t\t<button className=\"button is-fullwidth\" onClick={(e) => {dispatch(\"RESET\")}}>Reset</button>\n\t\t\t\t<button className=\"button is-fullwidth\" onClick={(e) => {dispatch(\"TOGGLE\")}}>Play / Pause</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Menu","import React from 'react'\n\nconst GameState = ({isPlaying}) => {\n\treturn (\n\t\t<div className=\"state box has-background-warning has-text-centered\">\n\t\t\t<h3 className=\"title is-3\">Currently {isPlaying ? \"playing\" : \"paused\"}</h3>\n\t\t</div>\n\t)\n\n}\n\nexport default GameState","export const shapes = [\n\t[\n\t\t[\n\t\t\t[0, 1, 1],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 0, 0]\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 0, 1]\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[1, 1, 0]\n\t\t],\n\t\t[\t[1, 0, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0]\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[1, 0, 0],\n\t\t],\n\t],\n\t\n\t[\n\t\t[\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[1, 1, 1, 1],\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t\t[1, 1, 1, 1],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[1, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t], \n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 1],\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[1, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t]\n\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t]\n]\n\nexport const colors = [\n\t\"#fc9105\", // S\n\t\"#0fbc1d\", // Z\n\t\"#16fcf0\", // I\n\t\"#1622fc\", // J\n\t\"#fc1631\", // L\n\t\"#f702ca\", // O\n\t\"#f2f204\", // T\n]\n","import React, {useReducer, useEffect} from 'react'\nimport GameBoard from './components/game-board'\nimport Modal from './components/modal'\nimport Score from './components/score'\nimport NextPiece from './components/next-piece'\nimport Menu from './components/menu'\nimport GameState from './components/game-state'\nimport './app.css'\nimport {initialState, GameReducer} from './reducers/game-reducer'\n\nconst App = (props) => {\n    const [state, dispatch] = useReducer(GameReducer, initialState)\n\t\n\tuseEffect(() => {\n\t\t\n\t\tdocument.addEventListener('keydown', keyDownHandler)\n\t\t\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', keyDownHandler)\n\t\t}\n\t}, [])\n\n\tconst keyDownHandler = (e) => {\n\t\tswitch(e.keyCode) {\n\t\t\tcase 32: {\n\t\t\t\tdispatch(\"DROP\")\n\t\t\t\t\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 37: {\n\t\t\t\tdispatch(\"MOVE_LEFT\")\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 38: {\n\t\t\t\tdispatch(\"ROTATE\")\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 39: {\n\t\t\t\tdispatch(\"MOVE_RIGHT\")\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 40: {\n\t\t\t\tdispatch(\"MOVE_DOWN\")\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n    return (\n        <div className=\"Container\">\n\t        <div className=\"grid\">\n\t\t        <h1 className=\"has-text-centered main-header\">Tetris game</h1>\n        \t\t<GameBoard state={state} dispatch={dispatch}></GameBoard>\n\t\t\t\t<NextPiece piece={state.nextActive} color={state.nextColor}></NextPiece>\n\t\t\t\t<Score score={state.score}></Score>\n\t\t\t\t<GameState isPlaying={state.isPlaying}></GameState>\n\t\t\t\t<Menu dispatch={dispatch}></Menu>\n\t        </div>\n            <Modal isPlaying={state.isPlaying} isDead={state.isDead} score={state.score} dispatch={dispatch}></Modal>\n        </div>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n//import 'bulma'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}