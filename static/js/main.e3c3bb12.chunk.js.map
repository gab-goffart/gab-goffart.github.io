{"version":3,"sources":["reducers/game-reducer.js","components/game-board.js","components/score.js","components/next-piece.js","components/menu.js","components/game-state.js","components/side-menu.js","components/modal.js","models/tetromino.js","App.js","serviceWorker.js","index.js"],"names":["GameBoard","_ref","state","dispatch","canvas","useRef","_useState","useState","_useState2","Object","slicedToArray","ctx","setCtx","_useState3","_useState4","animation","setAnimation","useEffect","current","getContext","lineWidth","setInterval","moveDown","time","a","window","clearInterval","fillStyle","strokeStyle","fillRect","i","board","length","j","strokeRect","react_default","createElement","className","ref","height","width","Score","score","NextPiece","piece","color","empty","SQ","Menu","onClick","e","GameState","isPlaying","SideMenu","next_piece","nextActive","nextColor","components_score","game_state","menu","Modal","isDead","classes","shapes","colors","index","Math","floor","random","nextIndex","initialState","activeIndex","shape","active","nextShape","position","x","y","GameReducer","action","newState","objectSpread","undraw","checkCollision","canLock","draw","c","flushRows","nb","console","log","pow","resetBoard","full","flushRow","toConsumableArray","App","props","_useReducer","useReducer","_useReducer2","document","addEventListener","keyDownHandler","removeEventListener","keyCode","game_board","side_menu","modal","Boolean","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e3c3bb12.chunk.js","sourcesContent":["import {shapes, colors} from '../models/tetromino'\n\nconst ROWS = 20\nconst COLS = 10\n\nconst index = Math.floor(Math.random() * shapes.length)\nconst nextIndex = Math.floor(Math.random() * shapes.length)\n\nlet board = []\nfor(let i = 0; i < ROWS; i++) {\n\tboard[i] = []\n\tfor(let j = 0; j < COLS; j++) {\n\t\tboard[i][j] = null\n\t}\n}\n\nexport const initialState = {\n\tindex: index,\n\tactiveIndex: 0,\n\tshape: shapes[index],\n\tactive: shapes[index][0],\n\tcolor: colors[index],\n\tnextIndex: nextIndex,\n\tnextShape: shapes[nextIndex],\n\tnextActive: shapes[nextIndex][0],\n\tnextColor: colors[nextIndex],\n\tposition: {\n\t\tx: 3,\n\t\ty: 0,\n\t},\n\tboard: board,\n\tscore: 0,\n\ttime: 1000,\n\tisPlaying: true,\n\tisDead: false\n}\n\nexport const GameReducer = (state, action) => {\n\tlet newState = {...state}\n\t//don't do anything if not playing\n\n\t\t\n\n\tnewState.board = undraw(newState.board, newState.active, newState.position)\n\n\tswitch (action) {\n\t\tcase 'MOVE_LEFT': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tnewState.position.x--\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.x++\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'MOVE_RIGHT': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\treturn newState\n\t\t\t}\n\n\t\t\tnewState.position.x++\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.x--\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase 'MOVE_DOWN': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tnewState.position.y++\n\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.y--\n\t\t\t\tif(!canLock(newState.position)) {\n\t\t\t\t\tnewState.isPlaying = false\n\t\t\t\t\tnewState.isDead = true\n\t\t\t\t\treturn newState\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnewState.board = draw(newState.board, newState.active, newState.position, newState.color)\n\t\t\t\tnewState.position.x = 3\n\t\t\t\tnewState.position.y = 0\n\t\t\t\tnewState.score += 50\n\n\t\t\t\tconst c = flushRows(newState.board)\n\t\t\t\tif(c.nb > 0) {\n\t\t\t\t\tnewState.board = c.board\n\t\t\t\tconsole.log(\"flushed\")\n\n\t\t\t\t\tnewState.time = newState.time - c.nb * 2\n\t\t\t\t\tnewState.score += 400 * Math.pow(2, c.nb)\n\t\t\t\t}\n\n\t\t\t\tnewState.index = newState.nextIndex\n\t\t\t\tnewState.activeIndex = 0\n\t\t\t\tnewState.shape = newState.nextShape\n\t\t\t\tnewState.active = newState.nextActive\n\t\t\t\tnewState.color = newState.nextColor\n\n\t\t\t\tnewState.nextIndex = Math.floor(Math.random() * shapes.length)\n\t\t\t\tnewState.nextShape = shapes[newState.nextIndex]\n\t\t\t\tnewState.nextActive = shapes[newState.nextIndex][0]\n\t\t\t\tnewState.nextColor = colors[newState.nextIndex]\n\t\t\t\t\n\t\t\t}\n\n\t\t\tbreak\n\t\t}\n\t\tcase 'DROP': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\treturn newState\n\t\t\t}\n\t\t\twhile(!checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.position.y++\n\t\t\t\t//try to lock the piece\n\t\t\t}\n\t\t\tnewState.position.y--\n\n   \t\t\tif(!canLock(newState.position)) {\n\t\t\t\tnewState.isPlaying = false\n\t\t\t\tnewState.isDead = true\n\t\t\t\treturn newState\n\t\t\t}\n\t\t\t\n\t\t\tnewState.board = draw(newState.board, newState.active, newState.position, newState.color)\n\t\t\tnewState.position.x = 3\n\t\t\tnewState.position.y = 0\t\t\t\n\t\t\tnewState.score += 50\n\n\t\t\tconst c = flushRows(newState.board)\n\t\t\tif(c.nb > 0) {\n\t\t\t\tnewState.board = c.board\n\t\t\t\tnewState.time = newState.time - c.nb * 2\n\t\t\t\tnewState.score += 400 * Math.pow(2, c.nb)\n\t\t\t}\n\n\t\t\tnewState.index = newState.nextIndex\n\t\t\tnewState.activeIndex = 0\n\t\t\tnewState.shape = newState.nextShape\n\t\t\tnewState.active = newState.nextActive\n\t\t\tnewState.color = newState.nextColor\n\n\t\t\tnewState.nextIndex = Math.floor(Math.random() * shapes.length)\n\t\t\tnewState.nextShape = shapes[newState.nextIndex]\n\t\t\tnewState.nextActive = newState.nextShape[0]\n\t\t\tnewState.nextColor = colors[newState.nextIndex]\n\t\t\tbreak\n\t\t}\n\t\tcase 'ROTATE': {\n\t\t\tif(!newState.isPlaying) {\n\t\t\t\tbreak\n\t\t\t}\n\n\t\t\tnewState.activeIndex++\n\t\t\tnewState.active = newState.shape[newState.activeIndex % newState.shape.length]\n\t\t\tif(checkCollision(newState.board, newState.active, newState.position)) {\n\t\t\t\tnewState.activeIndex--\n\t\t\t\tnewState.active = newState.shape[newState.activeIndex % newState.shape.length]\n\t\t\t}\n\t\t\tbreak\n\t\t}\n\t\tcase 'TOGGLE': {\n\t\t\tnewState.isPlaying = !newState.isPlaying\n\t\t\tbreak\n\t\t}\n\t\tcase 'RESET':  {\n\t\t\tnewState.position.x = 3\n\t\t\tnewState.position.y = 0\n\t\t\tnewState.time = initialState.time\n\t\t\tnewState.board = resetBoard(newState.board)\n\n\t\t\tnewState.index = Math.floor(Math.random() * shapes.length)\n\t\t\tnewState.shape = shapes[newState.index]\n\t\t\tnewState.active = newState.shape[0]\n\t\t\tnewState.color = colors[newState.index]\n\n\t\t\tnewState.nextIndex = Math.floor(Math.random() * shapes.length)\n\t\t\tnewState.nextShape = shapes[newState.nextIndex]\n\t\t\tnewState.nextActive = shapes[newState.nextIndex][0]\n\t\t\tnewState.nextColor = colors[newState.nextIndex]\n\n\t\t\tnewState.score = 0\n\t\t\tnewState.isPlaying = true\n\t\t\tnewState.isDead = false\n\t\t\tbreak\n\t\t}\n\t\tdefault: {\n\t\t\tbreak\n\t\t}\n\t}\n\n\n\n\tnewState.board = draw(newState.board, newState.active, newState.position, newState.color)\n\treturn newState\n}\n\n\nconst undraw = (board, piece, position) => {\n\treturn draw(board, piece, position, null)\n}\n\nconst draw = (board, piece, position, color) => {\n\tfor(let i = 0; i < piece.length; i++) {\n\t\tfor(let j = 0; j < piece[i].length; j++) {\n\t\t\tif(!piece[i][j]) {\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tboard[position.y + i][position.x + j] = color\n\t\t}\n\t}\n\treturn board\n}\n\nconst checkCollision = (board, piece, position) => {\n\tfor(let i = 0; i < piece.length; i++) {\n\t\tfor(let j = 0; j < piece[i].length; j++) {\n\n\t\t\tif(!piece[i][j]) {\n\t  \t\t\tcontinue\n\t\t\t}\n\n\t\t\tif(position.y + i >= ROWS) {\n\t\t  \t\treturn true\n\t\t\t}\n\n\t\t\tif(position.x + j < 0 || position.x + j >= COLS) {\n\t\t  \t\treturn true\n\t\t\t}\n\n\t\t\tif(board[position.y + i][position.x + j]) {\n\t\t  \t\treturn true\n\t\t\t}\n\t\t}\n\t}\n\treturn false\n}\n\nconst canLock = (position) => {\n\treturn position.y !== 0\n}\n\n\nconst flushRows = (board) => {\n\tlet full = true\n\tlet nb = 0\n\tfor(let i = 0; i < board.length; i++) {\n\t\tfor(let j = 0; j < board[i].length; j++) {\n\t\t\tif(board[i][j] === null) {\n\t\t\t\tfull = false\n\t\t\t}\n\t\t} \n\n\t\tif(full) {\n\t\t\tnb++\n\t\t\tboard = flushRow(board, i)\n\t\t}\n\t\tfull = true\n\t}\n\t\n\treturn {nb: nb, board: board}\n\n}\n\nconst flushRow = (board, index) => {\n\tfor(let i = index; i > 0; i--) {\n\t\tboard[i] = [...board[i - 1]]\n\t}\n\n\tfor(let i = 0; i < board[0].length; i++) {\n\t\tboard[0][i] = null\n\t}\n\n\treturn board\n}\n\nconst resetBoard = (board) => {\n\tfor(let i = 0; i < board.length; i++) {\n\t\tfor(let j = 0; j < board[i].length; j++) {\n\t\t\tboard[i][j] = null\n\t\t}\n\t}\n\n\treturn board\n}","import React, {useEffect, useRef, useState} from 'react'\n\nconst SQ = 35\n\nconst GameBoard = ({state, dispatch}) => {\n\tconst canvas = useRef(null)\n\tlet [ctx, setCtx] = useState(null)\n\tlet [animation, setAnimation] = useState(null)\n\n\tuseEffect(() => {\n\t\tctx = canvas.current.getContext(\"2d\")\n\t\tsetCtx(ctx)\n\t\tctx.lineWidth = \"2\"\n\t\tanimation = setInterval(moveDown, state.time)\n\t\tsetAnimation(animation)\n\n\t\treturn () => {\n\t\t\tsetAnimation(a => {\n\t\t\t\twindow.clearInterval(a)\n\t\t\t\treturn null\n\t\t\t})\n\t\t}\n\n\t}, [state.time])\n\n\tuseEffect(() => {\n\t\tctx.fillStyle = \"#000\"\n\t\tctx.strokeStyle = \"#fff\"\n\t\tctx.fillRect(0, 0, 10 * SQ, 20 * SQ)\n\n\t\tfor(let i = 0; i < state.board.length; i++) {\n\t\t\tfor(let j = 0; j < state.board[i].length; j++) {\n\t\t\t\tif(state.board[i][j]) {\n\t\t\t\t\tctx.fillStyle = state.board[i][j]\n\t\t\t\t\tctx.fillRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t\tctx.strokeRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\n\t})\n\n\tconst moveDown = () => {\n\t\tdispatch(\"MOVE_DOWN\")\n\t}\n\n\treturn (\n\t\t<div className=\"tile is-parent has-text-centered notification is-info\">\n\t        <div className=\"tile is-child\">\n            \t<canvas ref={canvas} height={20 * SQ} width={10 * SQ}></canvas> \n\t        </div>\n\t    </div>\n    )\n}\n\nexport default GameBoard","import React from 'react'\n\nconst Score = ({score}) => {\n\n\treturn(\n\t\t<div className=\"tile is-child notification is-warning\">\n\t\t\t<h3 className=\"title is-3\">\n\t\t\t\tYour score : <br/>\n\t\t\t\t{score}\n\t\t\t</h3>\n\t\t</div>\n\t)\n}\n\nexport default Score","import React, {useRef, useEffect} from 'react'\n\nconst SQ = 35\n\nconst NextPiece = ({piece, color}) => {\n\tlet ctx = null\n\tlet empty = []\n\tlet canvas = useRef(null)\n\n\tfor(let i = 0; i < 4; i++) {\n\t\tempty[i] = []\n\t\tfor(let j = 0; j < 4; j++){\n\t\t\tempty[i][j] = null\n\t\t}\n\t}\n\n\n\tuseEffect(() => {\n\t\tctx = canvas.current.getContext(\"2d\")\n\t\tctx.lineWidth = \"2\"\n\t\tctx.strokeStyle = \"#fff\"\n\t\tctx.fillStyle = \"#000\"\n\t\tctx.fillRect(0, 0, canvas.current.width, canvas.current.height)\n\t\tfor(let i = 0; i < piece.length; i++) {\n\t\t\tfor(let j = 0; j < piece[i].length; j++) {\n\t\t\t\tif(piece[i][j]) {\n\t\t\t\t\tctx.fillStyle = color\n\t\t\t\t\tctx.fillRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t\tctx.strokeRect(j * SQ, i * SQ, SQ, SQ)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, [piece])\n\n\treturn (\n\t\t<div className=\"tile is-child notification is-warning\">\n\t\t\t<h3 className=\"title is-3\">Your next piece :</h3>\n\t\t\t<canvas ref={canvas} height={SQ * 4} width={SQ * 4}></canvas>\n\t\t</div>\n\t)\n}\n\nexport default NextPiece","import React from 'react'\n\nconst Menu = ({dispatch}) => {\n\n\treturn (\n\t\t<div className=\"tile is-child notification is-warning\">\n\t\t\t<h3 className=\"title is-3\">Menu</h3>\n\t\t\t<div className=\"buttons\">\n\t\t\t\t<button className=\"button is-fullwidth is-inverted is-outlined is-warning\" onClick={(e) => {dispatch(\"RESET\")}}>Reset</button>\n\t\t\t\t<button className=\"button is-fullwidth is-inverted is-outlined is-warning\" onClick={(e) => {dispatch(\"TOGGLE\")}}>Play / Pause</button>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Menu","import React from 'react'\n\nconst GameState = ({isPlaying}) => {\n\treturn (\n\t\t<div className=\"tile is-child notification is-warning\">\n\t\t\t<h3 className=\"title is-3\">Currently {isPlaying ? \"playing\" : \"paused\"}</h3>\n\t\t</div>\n\t)\n\n}\n\nexport default GameState","import React from 'react'\nimport Score from './score'\nimport NextPiece from './next-piece'\nimport Menu from './menu'\nimport GameState from './game-state'\n\nconst SideMenu = ({state, dispatch}) => {\n\n\treturn (\n\t\t<div className=\"tile\">\n\t\t\t<div className=\"tile is-parent\">\n\t\t\t\t<NextPiece piece={state.nextActive} color={state.nextColor}></NextPiece>\n\t\t\t</div>\n\t\t\t<div className=\"tile is-parent is-vertical\">\n\t\t\t\t<Score score={state.score}></Score>\n\t\t\t\t<GameState isPlaying={state.isPlaying}></GameState>\n\t\t\t\t<Menu dispatch={dispatch}></Menu>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default SideMenu","import React from 'react'\n\nconst Modal = ({isDead, isPlaying, score, dispatch}) => {\n\tlet classes = \"modal\"\n\n\tif(isDead) {\n\t\tclasses += \" is-active\"\n\t}\n\n\tconst resetHandler = (e) => {\n\t\tdispatch(\"RESET\")\n\t}\n\n\treturn (\n\t\t<div className={classes}>\n\t\t\t<div className=\"modal-background\"></div>\n\t\t\t<div className=\"modal-card\">\n\t\t\t\t<header className=\"modal-card-head\">\n\t\t\t\t\tYou are dead!\n\t\t\t\t</header>\n\t\t\t\t<section className=\"modal-card-body\">\n\t\t\t\t\tLooks like you died. Your score is {score}. Would you like to play another game?\n\t\t\t\t</section>\n\t\t\t\t<footer className=\"modal-card-foot\">\n\t\t\t\t\t<button className=\"button is-outlined\" onClick={resetHandler}>Play again</button>\n\t\t\t\t</footer>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Modal","export const shapes = [\n\t[\n\t\t[\n\t\t\t[0, 1, 1],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 0, 0]\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 0, 1]\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[1, 1, 0]\n\t\t],\n\t\t[\t[1, 0, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0]\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[1, 0, 0],\n\t\t],\n\t],\n\t\n\t[\n\t\t[\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\t\t\t[0, 1, 0, 0],\n\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[1, 1, 1, 1],\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t\t[0, 0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t\t[1, 1, 1, 1],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[1, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t], \n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 1],\n\t\t],\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[1, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 0, 1],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t]\n\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\t\t\n\t\t[\n\t\t\t[0, 0, 0, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 1, 1, 0],\n\t\t\t[0, 0, 0, 0],\n\t\t],\n\n\t],\n\n\t[\n\t\t[\n\t\t\t[0, 0, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 0],\n\t\t\t[0, 1, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[1, 1, 1],\n\t\t\t[0, 0, 0],\n\t\t],\n\t\t[\n\t\t\t[0, 1, 0],\n\t\t\t[0, 1, 1],\n\t\t\t[0, 1, 0],\n\t\t],\n\t]\n]\n\nexport const colors = [\n\t\"#fc9105\", // S\n\t\"#0fbc1d\", // Z\n\t\"#16fcf0\", // I\n\t\"#1622fc\", // J\n\t\"#fc1631\", // L\n\t\"#f702ca\", // O\n\t\"#f2f204\", // T\n]\n","import React, {useReducer, useEffect} from 'react'\nimport GameBoard from './components/game-board'\nimport SideMenu from './components/side-menu'\nimport Modal from './components/modal'\nimport './app.css'\nimport {initialState, GameReducer} from './reducers/game-reducer'\n\nconst App = (props) => {\n    const [state, dispatch] = useReducer(GameReducer, initialState)\n\t\n\tuseEffect(() => {\n\t\t\n\t\tdocument.addEventListener('keydown', keyDownHandler)\n\t\t\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('keydown', keyDownHandler)\n\t\t}\n\t}, [])\n\n\tconst keyDownHandler = (e) => {\n\t\tswitch(e.keyCode) {\n\t\t\tcase 32: {\n\t\t\t\tdispatch(\"DROP\")\n\t\t\t\t\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 37: {\n\t\t\t\tdispatch(\"MOVE_LEFT\")\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 38: {\n\t\t\t\tdispatch(\"ROTATE\")\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 39: {\n\t\t\t\tdispatch(\"MOVE_RIGHT\")\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase 40: {\n\t\t\t\tdispatch(\"MOVE_DOWN\")\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tdefault: {\n\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\n    return (\n        <section className=\"section\">\n        \t<div className=\"columns\">\n\t        \t<div className=\"column is-6 is-offset-3\">\n\t\t        \t<h1 className=\"title is-1\">\n\t\t        \t    Tetris game\n\t\t        \t</h1>\n\t\t\t        <div className=\"tile is-ancestor notification is-info\">\n\t\t        \t\t<GameBoard state={state} dispatch={dispatch}></GameBoard>\n\t\t\t\t\t\t<SideMenu state={state} dispatch={dispatch}></SideMenu>\n\t\t\t        </div>\n\t        \t</div>\n        \t</div>\n            <Modal isPlaying={state.isPlaying} isDead={state.isDead} score={state.score} dispatch={dispatch}></Modal>\n        </section>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bulma'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}